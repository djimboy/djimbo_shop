# - *- coding: utf- 8 - *-
import json
import random
import time

import requests
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from pyqiwip2p import QiwiP2P

from keyboards.default import all_back_to_main_default, check_user_out_func
from keyboards.inline import *
from loader import dp, bot
from states.state_payment import StorageQiwi
from utils import send_all_admin, clear_firstname, get_dates
from utils.db_api.sqlite import update_userx, get_refillx, add_refillx


###################################################################################
############################## –í–í–û–î –°–£–ú–ú–´ –ü–û–ü–û–õ–ù–ï–ù–ò–Ø ##############################
# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.callback_query_handler(text="user_input", state="*")
async def input_amount(call: CallbackQuery, state: FSMContext):
    check_pass = False
    get_payment = get_paymentx()
    if get_payment[5] == "True":
        if get_payment[0] != "None" and get_payment[1] != "None" and get_payment[2] != "None":
            try:
                request = requests.Session()
                request.headers["authorization"] = "Bearer " + get_payment[1]
                response_qiwi = request.get(
                    f"https://edge.qiwi.com/payment-history/v2/persons/{get_payment[0]}/payments",
                    params={"rows": 1, "operation": "IN"})
                if response_qiwi.status_code == 200:
                    await StorageQiwi.here_input_qiwi_amount.set()
                    await bot.delete_message(call.from_user.id, call.message.message_id)
                    await call.message.answer("<b>üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ ü•ù</b>",
                                              reply_markup=all_back_to_main_default)
                else:
                    check_pass = True
            except json.decoder.JSONDecodeError:
                check_pass = True

            if check_pass:
                await bot.answer_callback_query(call.id, "‚ùó –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
                await send_all_admin(
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={call.from_user.id}'>{clear_firstname(call.from_user.first_name)}</a> "
                    f"–ø—ã—Ç–∞–ª—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.\n"
                    f"<b>‚ùå QIWI –∫–æ—à–µ–ª—ë–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –°—Ä–æ—á–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ –µ–≥–æ.</b>")
        else:
            await bot.answer_callback_query(call.id, "‚ùó –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
            await send_all_admin(
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={call.from_user.id}'>{clear_firstname(call.from_user.first_name)}</a> "
                f"–ø—ã—Ç–∞–ª—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.\n"
                f"<b>‚ùå QIWI –∫–æ—à–µ–ª—ë–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ä–æ—á–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ –µ–≥–æ.</b>")
    else:
        await bot.answer_callback_query(call.id, "‚ùó –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã")


###################################################################################
####################################### QIWI ######################################
# –ü—Ä–∏–Ω—è—Ç–∏–µ —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ —á–µ—Ä–µ–∑ QIWI
@dp.message_handler(state=StorageQiwi.here_input_qiwi_amount)
async def create_qiwi_pay(message: types.Message, state: FSMContext):
    if message.text.isdigit():
        pay_amount = int(message.text)
        del_msg = await bot.send_message(message.from_user.id, "<b>‚ôª –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–ª–∞—Ç—ë–∂ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...</b>")
        min_input_qiwi = 1  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä—É–±–ª—è—Ö

        get_payments = get_paymentx()
        if get_payments[0] != "None" or get_payments[1] != "None" or get_payments[2] != "None":
            try:
                request = requests.Session()
                request.headers["authorization"] = "Bearer " + get_payments[1]
                response_qiwi = request.get(
                    f"https://edge.qiwi.com/payment-history/v2/persons/{get_payments[0]}/payments",
                    params={"rows": 1, "operation": "IN"})
                if pay_amount >= min_input_qiwi:
                    passwd = list("1234567890ABCDEFGHIGKLMNOPQRSTUVYXWZ")
                    random.shuffle(passwd)
                    random_chars = "".join([random.choice(passwd) for x in range(10)])
                    generate_number_check = str(random.randint(100000000000, 999999999999))
                    if get_payments[4] == "form":
                        qiwi = QiwiP2P(get_payments[2])
                        bill = qiwi.bill(bill_id=generate_number_check, amount=pay_amount,
                                         comment=generate_number_check)
                        way_pay = "Form"
                        send_requests = bill.pay_url
                        send_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"‚ùó –£ –≤–∞—Å –∏–º–µ–µ—Ç—Å—è 30 –º–∏–Ω—É—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —Å—á–µ—Ç–∞.\n" \
                                       f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É  <code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code>\n" \
                                       f"üíµ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{pay_amount}—Ä—É–±</code>\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"
                    elif get_payments[4] == "number":
                        way_pay = "Number"
                        send_requests = f"https://qiwi.com/payment/form/99?extra%5B%27account%27%5D={get_payments[0]}&amountInteger=" \
                                        f"{pay_amount}&amountFraction=0&extra%5B%27comment%27%5D={generate_number_check}&currency=" \
                                        f"643&blocked%5B0%5D=sum&blocked%5B1%5D=comment&blocked%5B2%5D=account"
                        send_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—É–º–º—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª—ë–∫ –∏–ª–∏ " \
                                       f"–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É  <code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code>\n" \
                                       f"‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –Ω–∏–∂–µ\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"üè∑ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{generate_number_check}</code>\n" \
                                       f"üìû QIWI –∫–æ—à–µ–ª—ë–∫: <code>{get_payments[0]}</code>\n" \
                                       f"üíµ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{pay_amount}—Ä—É–±</code>\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"
                    elif get_payments[4] == "nickname":
                        way_pay = "Nickname"
                        send_requests = f"https://qiwi.com/payment/form/99999?amountInteger={pay_amount}&amountFraction=0&currency=643" \
                                        f"&extra%5B%27comment%27%5D=405550&extra%5B%27account%27%5D={get_payments[3]}&blocked%5B0%5D=" \
                                        f"comment&blocked%5B1%5D=account&blocked%5B2%5D=sum&0%5Bextra%5B%27accountType%27%5D%5D=nickname"
                        # send_requests = short_link.get(f"https://clck.ru/--?url={send_requests}").text
                        send_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—É–º–º—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª—ë–∫ –∏–ª–∏ " \
                                       f"–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É  <code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code> –∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n" \
                                       f"‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –Ω–∏–∂–µ\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"üè∑ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{generate_number_check}</code>\n" \
                                       f"‚ìÇ QIWI –ù–∏–∫–Ω–µ–π–º: <code>{get_payments[3]}</code>\n" \
                                       f"üíµ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{pay_amount}—Ä—É–±</code>\n" \
                                       f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                                       f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"
                    await bot.delete_message(message.chat.id, del_msg.message_id)
                    delete_msg = await message.answer("ü•ù <b>–ü–ª–∞—Ç—ë–∂ –±—ã–ª —Å–æ–∑–¥–∞–Ω.</b>",
                                                      reply_markup=check_user_out_func(message.from_user.id))
                    await message.answer(send_message,
                                         reply_markup=create_pay_qiwi_func(send_requests,
                                                                           generate_number_check,
                                                                           delete_msg.message_id,
                                                                           way_pay))
                    await state.finish()
                else:
                    await StorageQiwi.here_input_qiwi_amount.set()
                    await bot.delete_message(message.chat.id, del_msg.message_id)
                    await message.answer(f"‚ùå <b>–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>\n"
                                         f"‚ñ∂ –ú–∏–Ω. —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{min_input_qiwi}—Ä—É–±</code>\n"
                                         f"üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ ü•ù")
            except json.decoder.JSONDecodeError or UnicodeEncodeError:
                await state.finish()
                await bot.delete_message(message.chat.id, del_msg.message_id)
                await message.answer("‚ùï –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.\n"
                                     "‚åõ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.",
                                     reply_markup=check_user_out_func(message.from_user.id))
                await send_all_admin("<b>ü•ù QIWI –∫–æ—à–µ–ª—ë–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b> ‚ùå\n"
                                     f"‚ùï <a href='tg://user?id={message.from_user.id}'>{clear_firstname(message.from_user.first_name)}</a>"
                                     " –ø—ã—Ç–∞–ª—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
                                     "‚ùó –ö–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –∑–∞–º–µ–Ω–∏—Ç–µ QIWI –∫–æ—à–µ–ª—ë–∫")
        else:
            await state.finish()
            await bot.delete_message(message.chat.id, del_msg.message_id)
            await message.answer("‚ùï –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.\n"
                                 "‚åõ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.",
                                 reply_markup=check_user_out_func(message.from_user.id))
            await send_all_admin("<b>ü•ù QIWI –∫–æ—à–µ–ª—ë–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b> ‚ùå\n"
                                 f"‚ùï <a href='tg://user?id={message.from_user.id}'>{clear_firstname(message.from_user.first_name)}</a>"
                                 " –ø—ã—Ç–∞–ª—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
                                 "‚ùó –ö–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –∑–∞–º–µ–Ω–∏—Ç–µ QIWI –∫–æ—à–µ–ª—ë–∫")
    else:
        await StorageQiwi.here_input_qiwi_amount.set()
        await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ.</b>\n"
                             "üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ ü•ù")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É" QIWI —á–µ—Ä–µ–∑ –§–æ—Ä–º—É
@dp.callback_query_handler(text_startswith="Pay:Form:")
async def check_qiwi_pay(call: CallbackQuery):
    receipt = call.data[9:].split(":")[0]
    message_id = call.data[9:].split(":")[1]
    get_payments = get_paymentx()
    get_user_info = get_userx(user_id=call.from_user.id)
    if get_payments[0] != "None" or get_payments[1] != "None" or get_payments[2] != "None":
        qiwi = QiwiP2P(get_payments[2])
        pay_comment = qiwi.check(bill_id=receipt).comment  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–ª–∞—Ç–µ–∂–∞
        pay_status = qiwi.check(bill_id=receipt).status  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
        pay_amount = float(qiwi.check(bill_id=receipt).amount)  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –ø–ª–∞—Ç–µ–∂–∞ –≤ —Ä—É–±–ª—è—Ö
        pay_amount = int(pay_amount)
        if pay_status == "PAID":
            get_purchase = get_refillx("*", receipt=receipt)
            if get_purchase is None:

                add_refillx(call.from_user.id, call.from_user.username, call.from_user.first_name, pay_comment,
                            pay_amount, receipt, "Form", get_dates(),
                            int(time.time()))

                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                update_userx(call.from_user.id,
                             balance=int(get_user_info[4]) + pay_amount,
                             all_refill=int(get_user_info[5]) + pay_amount)

                await bot.delete_message(call.message.chat.id, message_id)
                await call.message.delete()
                await call.message.answer(f"<b>‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {pay_amount}—Ä—É–±. –£–¥–∞—á–∏ ‚ù§</b>\n"
                                          f"<b>üìÉ –ß–µ–∫:</b> <code>+{receipt}</code>",
                                          reply_markup=check_user_out_func(call.from_user.id))
                await send_all_admin(f"<b>üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b> "
                                     f"(@{call.from_user.username}|<a href='tg://user?id={call.from_user.id}'>{call.from_user.first_name}</a>"
                                     f"|<code>{call.from_user.id}</code>) "
                                     f"<b>–ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É</b> <code>{pay_amount}—Ä—É–±</code> ü•ù\n"
                                     f"üìÉ <b>–ß–µ–∫:</b> <code>+{receipt}</code>")
            else:
                await bot.answer_callback_query(call.id, "‚ùó –í–∞—à–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —É–∂–µ –∑–∞—á–∏—Å–ª–µ–Ω–æ.", True)
        elif pay_status == "EXPIRED":
            await bot.edit_message_text("<b>‚ùå –í—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã –≤—ã—à–ª–æ. –ü–ª–∞—Ç—ë–∂ –±—ã–ª —É–¥–∞–ª—ë–Ω.</b>",
                                        call.message.chat.id,
                                        call.message.message_id,
                                        reply_markup=check_user_out_func(call.from_user.id))
        elif pay_status == "WAITING":
            await bot.answer_callback_query(call.id, "‚ùó –û–ø–ª–∞—Ç–∞ –Ω–µ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞.", True)
        elif pay_status == "REJECTED":
            await bot.edit_message_text("<b>‚ùå –°—á—ë—Ç –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω.</b>",
                                        call.message.chat.id,
                                        call.message.message_id,
                                        reply_markup=check_user_out_func(call.from_user.id))
    else:
        await send_all_admin("<b>‚ùó –ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–ª—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂, –Ω–æ QIWI –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
                             "‚ùó –°—Ä–æ—á–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ QIWI –¥–∞–Ω–Ω—ã–µ</b>")
        await bot.answer_callback_query(call.id, "‚ùó –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞,\n"
                                                 "–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
                                                 "‚è≥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É" QIWI —á–µ—Ä–µ–∑ –ù–æ–º–µ—Ä –∏ –ù–∏–∫–Ω–µ–π–º
@dp.callback_query_handler(text_startswith=["Pay:Number", "Pay:Nickname"])
async def check_qiwi_pay(call: CallbackQuery):
    way_pay = call.data[4:].split(":")[0]
    receipt = call.data[4:].split(":")[1]
    message_id = call.data[4:].split(":")[2]
    get_payments = get_paymentx()
    get_user_info = get_userx(user_id=call.from_user.id)
    pay_status = False
    if get_payments[0] != "None" or get_payments[1] != "None" or get_payments[2] != "None":
        try:
            request = requests.Session()
            request.headers["authorization"] = "Bearer " + get_payments[1]
            get_history = request.get(
                f"https://edge.qiwi.com/payment-history/v2/persons/{get_payments[0]}/payments",
                params={"rows": 20, "operation": "IN"}).json()["data"]
            for check_pay in get_history:
                if str(receipt) == str(check_pay["comment"]):
                    if "643" == str(check_pay["sum"]["currency"]):
                        pay_status = True  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
                        pay_amount = float(check_pay["sum"]["amount"])  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –ø–ª–∞—Ç–µ–∂–∞ –≤ —Ä—É–±–ª—è—Ö
                        pay_amount = int(pay_amount)
                    else:
                        await bot.answer_callback_query(call.id, "‚ùó –û–ø–ª–∞—Ç–∞ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –Ω–µ –≤ —Ä—É–±–ª—è—Ö.", True)
            if pay_status:
                get_purchase = get_refillx("*", receipt=receipt)
                if get_purchase is None:
                    add_refillx(call.from_user.id, call.from_user.username, call.from_user.first_name, receipt,
                                pay_amount, receipt, way_pay, get_dates(), int(time.time()))

                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    update_userx(call.from_user.id,
                                 balance=int(get_user_info[4]) + pay_amount,
                                 all_refill=int(get_user_info[5]) + pay_amount)

                    await bot.delete_message(call.message.chat.id, message_id)
                    await call.message.delete()
                    await call.message.answer(
                        f"<b>‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {pay_amount}—Ä—É–±. –£–¥–∞—á–∏ ‚ù§</b>\n"
                        f"<b>üìÉ –ß–µ–∫:</b> <code>+{receipt}</code>",
                        reply_markup=check_user_out_func(call.from_user.id))
                    await send_all_admin(f"<b>üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b> "
                                         f"(@{call.from_user.username}|<a href='tg://user?id={call.from_user.id}'>{call.from_user.first_name}</a>"
                                         f"|<code>{call.from_user.id}</code>) "
                                         f"<b>–ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É</b> <code>{pay_amount}—Ä—É–±</code> ü•ù\n"
                                         f"üìÉ <b>–ß–µ–∫:</b> <code>+{receipt}</code>")
                else:
                    await bot.answer_callback_query(call.id, "‚ùó –í–∞—à–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —É–∂–µ –∑–∞—á–∏—Å–ª–µ–Ω–æ.", True)
            else:
                await bot.answer_callback_query(call.id, "‚ùó –ü–ª–∞—Ç—ë–∂ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω.\n‚åõ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.", True)
        except json.decoder.JSONDecodeError:
            await bot.answer_callback_query(call.id,
                                            "‚ùï –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
                                            "‚åõ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.", True)
            await send_all_admin("<b>ü•ù QIWI –∫–æ—à–µ–ª—ë–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b> ‚ùå\n"
                                 f"‚ùï <a href='tg://user?id={call.from_user.id}'>{call.from_user.first_name}</a>"
                                 " –ø—ã—Ç–∞–ª—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂\n"
                                 "‚ùó –ö–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –∑–∞–º–µ–Ω–∏—Ç–µ QIWI –∫–æ—à–µ–ª—ë–∫")
    else:
        await send_all_admin("<b>‚ùó –ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–ª—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂, –Ω–æ QIWI –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
                             "‚ùó –°—Ä–æ—á–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ QIWI –¥–∞–Ω–Ω—ã–µ</b>")
        await bot.answer_callback_query(call.id, "‚ùó –ò–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞,\n"
                                                 "–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
                                                 "‚è≥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.")
